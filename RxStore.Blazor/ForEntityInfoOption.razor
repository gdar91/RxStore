@namespace RxStoreC

@using Microsoft.FSharp.Core
@using RxStore
@using RxStore.Entity


@typeparam T


<RxStoreC.ForOption Of="Of">
    <WhenSome Context="entityInfo">
        <RxStoreC.ForEntityInfo Of="entityInfo">
            <WhenPending Context="stamp">
                @if (WhenPending != null)
                {
                    @WhenPending(stamp)
                }
            </WhenPending>
            <WhenFailed Context="stamp">
                @if (WhenFailed != null)
                {
                    @WhenFailed(stamp)
                }
            </WhenFailed>
            <WhenSuccessful Context="stamp">
                @if (WhenSuccessful != null)
                {
                    @WhenSuccessful(stamp)
                }
            </WhenSuccessful>
        </RxStoreC.ForEntityInfo>
    </WhenSome>
    <WhenNone>
        @if (WhenNone != null)
        {
            @WhenNone
        }
    </WhenNone>
</RxStoreC.ForOption>


@code
{
    [Parameter]
    public FSharpOption<EntityInfo<T>> Of { get; set; }

    [Parameter]
    public RenderFragment WhenNone { get; set; }

    [Parameter]
    public RenderFragment<Stamp<Unit>> WhenPending { get; set; }

    [Parameter]
    public RenderFragment<Stamp<string>> WhenFailed { get; set; }

    [Parameter]
    public RenderFragment<Stamp<T>> WhenSuccessful { get; set; }
}
