@namespace RxStore

@typeparam T
@typeparam TError


<ForOption Of="Of.LatestResult">
    <WhenNone></WhenNone>
    <WhenSome Context="latestResult">
        <ForOption Of="latestResult.LatestItem">
            <WhenSome Context="stamp">
                @WhenItem(stamp)
            </WhenSome>
            <WhenNone>
                <ForResult Of="latestResult.Stamp.Item">
                    <WhenOk Context="item">
                        @WhenItem(Stamp.MapTo(item, latestResult.Stamp))
                    </WhenOk>
                    <WhenError Context="error">
                        @WhenError(Stamp.MapTo(error, latestResult.Stamp))
                    </WhenError>
                </ForResult>
            </WhenNone>
        </ForOption>
    </WhenSome>
</ForOption>


@code
{
    [Parameter]
    public EntityInfo<T, TError> Of { get; set; }

    [Parameter]
    public RenderFragment WhenNothing { get; set; }

    [Parameter]
    public RenderFragment<Stamp<TError>> WhenError { get; set; }

    [Parameter]
    public RenderFragment<Stamp<T>> WhenItem { get; set; }
}
