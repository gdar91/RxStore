@namespace RxStore

@using Fills
@using System.Text.RegularExpressions

@typeparam TData

@inherits ReactiveComponentBase


<Subscribe To="configurations" Context="configuration">

    <Subscribe To="uris" Context="uri">

        @{
            var results =
                configuration.Matches
                    .TrySelect(
                        (PureRouterMatch<TData> match, out TData result) =>
                            match(uri, out result)
                    )
                    .Take(1)
                    .ToArray();


            if (results.Length == 0)
            {
                @WhenNotFound
            }
            else
            {
                if (WhenFound != null)
                {
                    @WhenFound(results[0])
                }
            }
        }

    </Subscribe>

</Subscribe>


@code
{
    private readonly PropertySubject<PureRouterConfiguration<TData>> configurations;

    private readonly PropertySubject<string> uris;


    public PureRouter()
    {
        configurations = Property<PureRouterConfiguration<TData>>();
        uris = Property<string>();
    }


    [Parameter]
    public PureRouterConfiguration<TData> Configuration { set => configurations.OnNext(value); }

    [Parameter]
    public string Uri { set => uris.OnNext(value); }


    [Parameter]
    public RenderFragment<TData> WhenFound { get; set; }

    [Parameter]
    public RenderFragment WhenNotFound { get; set; }
}
