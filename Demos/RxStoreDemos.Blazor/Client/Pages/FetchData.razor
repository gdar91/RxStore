@page "/fetchdata"
@using RxStoreDemos.Blazor.Shared
@inject HttpClient Http
@inject Store<AppState, IAppAction> Store

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<Subscribe To="@Forecasts" Context="forecasts">
    @if (forecasts == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</Subscribe>

@code
{
    private IObservable<WeatherForecast[]> Forecasts { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Forecasts = Store.Project(state => state.WeatherForecasts);

        var forecasts = await Http.GetJsonAsync<WeatherForecast[]>("WeatherForecast");
        var action = new ReceiveWeatherForecastsAction(forecasts);

        Store.Dispatch(action);
    }
}
